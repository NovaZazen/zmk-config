/*
 * Copyright (c) 2023 [Your Name]
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/keys.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define U_BASE    0
#define U_NAV     1
#define U_MOUSE   2
#define U_BUTTON  3
#define U_MEDIA   4
#define U_NUM     5
#define U_SYM     6
#define U_FUN     7
#define U_GAME    8
#define U_TAP     9

/ {
    behaviors {
        u_hm: homerow_mods {
            compatible      = "zmk,behavior-hold-tap";
            label           = "HOMEROW_MODS";
            #binding-cells  = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms    = <0>;
            flavor          = "tap-preferred";
            bindings        = <&kp>, <&kp>;
        };

		u_lt: layer_tap {
            compatible      = "zmk,behavior-hold-tap";
            label           = "LAYER_TAP";
            #binding-cells  = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms    = <0>;
            flavor          = "tap-preferred";
            bindings        = <&mo>, <&kp>;
		};
		
		td_tog_base: tap_dance_toggle_base {
            compatible      = "zmk,behavior-tap-dance";
            label           = "TAP_DANCE_TOGGLE_BASE";
            #binding-cells  = <0>;
            tapping-term-ms = <200>;
            bindings        = <&none>, <&tog U_BASE>;
        };
		
		td_tog_nav: tap_dance_toggle_nav {
            compatible      = "zmk,behavior-tap-dance";
            label           = "TAP_DANCE_TOGGLE_NAV";
            #binding-cells  = <0>;
            tapping-term-ms = <200>;
            bindings        = <&none>, <&tog U_NAV>;
        };
		
		td_tog_mouse: tap_dance_toggle_mouse {
            compatible      = "zmk,behavior-tap-dance";
            label           = "TAP_DANCE_TOGGLE_MOUSE";
            #binding-cells  = <0>;
            tapping-term-ms = <200>;
            bindings        = <&none>, <&tog U_MOUSE>;
        };
		
		td_tog_button: tap_dance_toggle_button {
            compatible      = "zmk,behavior-tap-dance";
            label           = "TAP_DANCE_TOGGLE_BUTTON";
            #binding-cells  = <0>;
            tapping-term-ms = <200>;
            bindings        = <&none>, <&tog U_BUTTON>;
        };
		
		td_tog_media: tap_dance_toggle_media {
            compatible      = "zmk,behavior-tap-dance";
            label           = "TAP_DANCE_TOGGLE_MEDIA";
            #binding-cells  = <0>;
            tapping-term-ms = <200>;
            bindings        = <&none>, <&tog U_MEDIA>;
        };
		
		td_tog_num: tap_dance_toggle_num {
            compatible      = "zmk,behavior-tap-dance";
            label           = "TAP_DANCE_TOGGLE_NUM";
            #binding-cells  = <0>;
            tapping-term-ms = <200>;
            bindings        = <&none>, <&tog U_NUM>;
        };
		
		td_tog_sym: tap_dance_toggle_sym {
            compatible      = "zmk,behavior-tap-dance";
            label           = "TAP_DANCE_TOGGLE_SYM";
            #binding-cells  = <0>;
            tapping-term-ms = <200>;
            bindings        = <&none>, <&tog U_SYM>;
        };
		
		td_tog_fun: tap_dance_toggle_fun {
            compatible      = "zmk,behavior-tap-dance";
            label           = "TAP_DANCE_TOGGLE_FUN";
            #binding-cells  = <0>;
            tapping-term-ms = <200>;
            bindings        = <&none>, <&tog U_FUN>;
        };
		
		td_tog_game: tap_dance_toggle_game {
            compatible      = "zmk,behavior-tap-dance";
            label           = "TAP_DANCE_TOGGLE_GAME";
            #binding-cells  = <0>;
            tapping-term-ms = <200>;
            bindings        = <&none>, <&tog U_GAME>;
        };
		
		td_tog_tap: tap_dance_toggle_tap {
            compatible      = "zmk,behavior-tap-dance";
            label           = "TAP_DANCE_TOGGLE_TAP";
            #binding-cells  = <0>;
            tapping-term-ms = <200>;
            bindings        = <&none>, <&tog U_TAP>;
        };
		
		u_lbut: layer_button {
            compatible      = "zmk,behavior-hold-tap";
            label           = "LAYER_BUTTON";
            #binding-cells  = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms    = <0>;
            flavor          = "tap-preferred";
            bindings        = <&mo>, <&kp>;
		};
    };
	
	combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
			layers = <8 9>;
            bindings = <&tog U_BASE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        label      = "Default keymap";

        base_layer {
            /*
                ------------------------------------------------------------------------------------------------------
                |   |    Q    |    W    |     F    |     P     | B | J |    L      |     U    |    Y    |       '         |   |
				
                |   | LWIN(A) | LALT(R) | LCTRL(S) | LSHIFT(T) | G | M | RSHIFT(N) | RCTRL(E) | RALT(I) |     RWIN(O)     |   |
				
                |   | U_BUTTON(Z) |  X  |     C    |     D     | V | K |    H      |     ,    |    .    | U_BUTTON(SLASH) |   |
				
                            | MEDIA(ESC) | NAV(SPACE) | MOUSE(TAB) | SYM(ENTER) | NUM(BACKSPACE) | FUN(DELETE) |
                ------------------------------------------------------------------------------------------------------
            */
            bindings = <
                &none          &kp Q               &kp W             &kp F             &kp P          &kp B           &kp J             &kp L             &kp U          &kp Y            &kp SQT                  &none
                &none          &u_hm LWIN A        &u_hm LALT R      &u_hm LCTRL S     &u_hm LSHIFT T &kp G           &kp M             &u_hm RSHIFT N    &u_hm RCTRL E  &u_hm RALT I     &u_hm RWIN O             &none
                &none          &u_lbut U_BUTTON Z  &kp X             &kp C             &kp D          &kp V           &kp K             &kp H             &kp COMMA      &kp PERIOD       &u_lbut U_BUTTON SLASH   &none
                &u_lt U_MEDIA ESC &u_lt U_NAV SPACE &u_lt U_MOUSE TAB &u_lt U_SYM ENTER &u_lt U_NUM BACKSPACE &u_lt U_FUN DELETE
            >;
        };
        
        
        
        nav_layer {
            bindings = <
                &none          &none             &td_tog_tap     &td_tog_game      &td_tog_base     &none           &kp C_AC_REDO       &kp C_AC_PASTE     &kp C_AC_COPY      &kp C_AC_CUT     &kp C_AC_UNDO       &none
                &none          &kp LWIN      	 &kp LALT        &kp LCTRL         &kp LSHIFT       &none           &kp CAPSLOCK        &kp LEFT_ARROW     &kp DOWN_ARROW     &kp UP_ARROW     &kp RIGHT_ARROW     &none
                &none          &none             &none           &td_tog_num       &td_tog_nav      &none           &kp INSERT          &kp HOME           &kp PAGE_DOWN      &kp PAGE_UP      &kp END             &none
                &none &td_tog_nav &none &kp ENTER &kp BACKSPACE &kp DELETE
            >;
        };
        
        mouse_layer {
            bindings = <
                &none        &none         &td_tog_tap  &td_tog_game     &td_tog_base     &none            &none     &none      &none      &none       &none      &none
                &none        &kp LWIN      &kp LALT     &kp LCTRL        &kp LSHIFT       &none            &none     &none      &none      &none       &none      &none
                &none        &none         &none        &td_tog_sym      &td_tog_mouse    &none            &none     &none      &none      &none       &none      &none
                &none &none &td_tog_mouse &none &none &none
            >;
        };
        
        button_layer {
            bindings = <
                &none          &kp C_AC_UNDO       &kp C_AC_CUT       &kp C_AC_COPY      &kp C_AC_PASTE    &kp C_AC_REDO      &kp C_AC_REDO       &kp C_AC_PASTE    &kp C_AC_COPY     &kp C_AC_CUT        &kp C_AC_UNDO            &none
                &none          &kp LWIN            &kp LALT           &kp LCTRL          &kp LSHIFT        &none              &none               &kp RSHIFT        &kp RCTRL         &kp RALT            &kp RWIN                 &none
                &none          &kp C_AC_UNDO       &kp C_AC_CUT       &kp C_AC_COPY      &kp C_AC_PASTE    &kp C_AC_REDO      &kp C_AC_REDO       &kp C_AC_PASTE    &kp C_AC_COPY     &kp C_AC_CUT        &kp C_AC_UNDO            &none
                &none &none &none &none &none &none
            >;
        };
        
        media_layer {
            bindings = <
                &none          &none             &td_tog_tap     &td_tog_game      &td_tog_base       &none           &kp C_AC_REDO         &kp C_AC_PASTE     &kp C_AC_COPY         &kp C_AC_CUT          &kp C_AC_UNDO       &none
                &none          &kp LWIN      	 &kp LALT        &kp LCTRL         &kp LSHIFT         &none           &ext_power EP_TOG     &kp C_PREV         &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp C_NEXT          &none
                &none          &none             &none           &td_tog_fun       &td_tog_media      &none           &out OUT_TOG          &bt BT_SEL 0       &bt BT_SEL 1          &bt BT_SEL 2          &bt BT_SEL 3        &none
                &td_tog_media &none &none &kp C_STOP &kp C_PLAY_PAUSE &kp C_MUTE
            >;
        };
        
        num_layer {
            bindings = <
                &none          &kp LEFT_BRACKET   &kp NUMBER_7      &kp NUMBER_8       &kp NUMBER_9      &kp RIGHT_BRACKET     &none      &td_tog_base     &td_tog_game   &td_tog_tap  &none        &none
                &none          &kp SEMICOLON      &kp NUMBER_4      &kp NUMBER_5       &kp NUMBER_6      &kp EQUAL             &none      &kp RSHIFT       &kp RCTRL      &kp RALT     &kp RWIN     &none
                &none          &kp GRAVE          &kp NUMBER_1      &kp NUMBER_2       &kp NUMBER_3      &kp BACKSLASH         &none      &td_tog_num      &td_tog_nav    &none        &none        &none
                &kp PERIOD &kp NUMBER_0 &kp MINUS &none &td_tog_num &none
            >;
        };
        
        sym_layer {
            bindings = <
                &none          &kp LEFT_BRACE    &kp AMPERSAND      &kp ASTERISK      &kp LEFT_PARENTHESIS     &kp RIGHT_BRACE     &none      &td_tog_base     &td_tog_game     &td_tog_tap  &none        &none
                &none          &kp COLON         &kp DOLLAR         &kp PERCENT       &kp CARET                &kp PLUS            &none      &kp RSHIFT       &kp RCTRL        &kp RALT     &kp RWIN     &none
                &none          &kp TILDE         &kp EXCLAMATION    &kp AT_SIGN       &kp HASH                 &kp PIPE            &none      &td_tog_sym      &td_tog_mouse    &none        &none        &none
                &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp UNDERSCORE &td_tog_sym &none &none
            >;
        };
        
        fun_layer {
            bindings = <
                &none          &kp F12     &kp F7      &kp F8       &kp F9      &kp PRINTSCREEN      &none      &td_tog_base     &td_tog_game     &td_tog_tap  &none        &none
                &none          &kp F11     &kp F4      &kp F5       &kp F6      &kp SCROLLLOCK       &none      &kp RSHIFT       &kp RCTRL        &kp RALT     &kp RWIN     &none
                &none          &kp F10     &kp F1      &kp F2       &kp F3      &kp PAUSE_BREAK      &none      &td_tog_fun      &td_tog_media    &none        &none        &none
                &kp K_APPLICATION &kp SPACE &kp TAB &none &none &td_tog_fun
            >;
        };
		
		game_layer {
            bindings = <
                &none          &td_tog_game       &kp Q             &kp W             &kp E          &kp R           &kp T             &kp Y      &kp U      &kp I        &kp O        &none
                &none          &kp LSHIFT         &kp A             &kp S             &kp D          &kp F           &kp G             &kp H      &kp J      &kp K        &kp L        &none
                &none          &kp LCTRL          &kp Z             &kp X             &kp C          &kp V           &kp B             &kp N      &kp M      &kp COMMA    &kp PERIOD   &none
                &kp ESC &kp SPACE &kp TAB &kp ENTER &kp BACKSPACE &kp DELETE
            >;
        };
		
		tap_layer {
            /*
                ------------------------------------------------------------------------------------------------------
                |   |    Q    |    W    |     F    |     P     | B | J |    L      |     U    |    Y    |      '      |   |
				
                |   |    A    |    R    |     S    |     T     | G | M |    N      |     E    |    I    |      O      |   |
				
                |   |    Z    |    X    |     C    |     D     | V | K |    H      |     ,    |    .    |    SLASH    |   |
				
                                               | ESC | SPACE | TAB | ENTER | BACKSPACE | DELETE |
                ------------------------------------------------------------------------------------------------------
            */
            bindings = <
                &none          &kp Q               &kp W             &kp F             &kp P          &kp B           &kp J             &kp L             &kp U          &kp Y            &kp SQT                  &none
                &none          &kp A               &kp R             &kp S             &kp T          &kp G           &kp M             &kp N             &kp E          &kp I            &kp O                    &none
                &none          &kp Z               &kp X             &kp C             &kp D          &kp V           &kp K             &kp H             &kp COMMA      &kp PERIOD       &kp SLASH                &none
                &kp ESC  &kp SPACE  &kp TAB  &kp ENTER  &kp BACKSPACE  &kp DELETE
            >;
        };
    };
};
